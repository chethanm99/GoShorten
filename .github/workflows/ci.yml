---

name: CI - Build and Scan

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: go-url-shortner

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Run tests
        working-directory: app
        run: go test ./... -v

      - name: Create an .env from .env.example
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: Build Docker image and tag with SHA
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t "${{ env.IMAGE_NAME}}:${IMAGE_TAG}" -t "${{ env.IMAGE_NAME }}:latest" .

      - name: Run Trivy Scan (JSON + SARIF)
        id: trivy_scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy image --format json --output trivy-results.json --severity CRITICAL,HIGH "${{ env.IMAGE_NAME }}:${{ github.sha }}" || true
          trivy image --format sarif --output trivy-results.sarif --severity CRITICAL,HIGH "${{ env.IMAGE_NAME }}:${{ github.sha }}" || true
          if jq -e '.Results[]?.Vulnerabilities | select(.!=null) | .[] | select(.Severity=="CRITICAL" or .Severity=="HIGH")' trivy-results.json >/dev/null 2>&1; then
            echo "vuln_found=true" >> $GITHUB_OUTPUT
          else
            echo "vuln_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish SARIF to Github Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Trivy Scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: |
            trivy-results.sarif
            trivy-results.json

      - name: Smoke test image
        if: steps.trivy_scan.outputs.vuln_found != 'true'
        run: |
          docker run -d --name smoke_test -p 8080:8080 "${{ env.IMAGE_NAME }}:${{ github.sha }}"
          for i in {1..15}; do
            if curl -fsS http://localhost:8080/health; then
              echo "OK" && break
            fi
            sleep 2
          done
          docker stop smoke_test || true
          docker rm smoke_test || true